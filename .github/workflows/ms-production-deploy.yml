name: Production Deployment

on:
  workflow_call:
    inputs:
      RELEASE_TAG:
        type: string
        required: true
      DISABLE_CACHE:
        type: string
        default: 'false'
        description: Disable docker cache
        required: false
      SLACK_CHANNEL:
        type: string
        description: Slack channel to send notifications
        required: false
      AWS_BUCKET_BACKUP_STEPLIX:
        type: string
        description: AWS bucket name for backup
        required: false
      STEPLIX_BACKUP_PATH:
        type: string
        description: Path where the backup will be saved
        required: false
    secrets:
      SLACK_WEBHOOK_URL:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      AWS_CLOUDFORMATION_PARAMS_OVERRIDE:
        required: false
      
      AWS_ACCESS_KEY_ID_BACKUP:
        required: false
      AWS_SECRET_ACCESS_KEY_BACKUP:
        required: false
      AWS_REGION_BACKUP:
        required: false

env:
  RELEASE_TAG: '${{ inputs.RELEASE_TAG }}'
  DISABLE_CACHE: '${{ inputs.DISABLE_CACHE }}'
  SLACK_CHANNEL: '${{ inputs.SLACK_CHANNEL }}'

  AWS_BUCKET_BACKUP_STEPLIX: '${{ inputs.AWS_BUCKET_BACKUP_STEPLIX }}'
  STEPLIX_BACKUP_PATH: '${{ inputs.STEPLIX_BACKUP_PATH }}'

  # Secrets
  SLACK_WEBHOOK_URL: '${{ secrets.SLACK_WEBHOOK_URL }}'
  AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
  AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
  AWS_REGION: '${{ secrets.AWS_REGION }}'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: steplix/cicd-steplix-deploy-ecr-and-cloudformation@v3
        with:
          ENVIRONMENT: production
          AWS_ECR_REPOSITORY: ${{ vars.AWS_ECR_REPOSITORY }}
          AWS_CF_STACK_NAME: ${{ vars.AWS_CF_STACK_NAME || github.event.repository.name }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_CLOUDFORMATION_PARAMS_OVERRIDE: '${{ secrets.AWS_CLOUDFORMATION_PARAMS_OVERRIDE || vars.AWS_CLOUDFORMATION_PARAMS_OVERRIDE }}'
          TAG: ${{ env.RELEASE_TAG }}
          DISABLE_CACHE: ${{ env.DISABLE_CACHE }}
          CAPABILITIES: CAPABILITY_NAMED_IAM
          CONCAT_ENV_CF_STACK_NAME: false

          AWS_ACCESS_KEY_ID_BACKUP: ${{ secrets.AWS_ACCESS_KEY_ID_BACKUP }}
          AWS_SECRET_ACCESS_KEY_BACKUP: ${{ secrets.AWS_SECRET_ACCESS_KEY_BACKUP }}
          AWS_REGION_BACKUP: ${{ secrets.AWS_REGION_BACKUP }}

          AWS_BUCKET_BACKUP_STEPLIX: ${{ env.AWS_BUCKET_BACKUP_STEPLIX }}
          STEPLIX_BACKUP_PATH: ${{ env.STEPLIX_BACKUP_PATH }}

  notify:
    runs-on: ubuntu-latest
    needs:
      - deploy
    if: success() || failure()
    continue-on-error: true
    steps:
      - name: Slack Notify
        uses: steplix/cicd-notify@1.0.0
        with:
          template: push
          status: ${{ needs.deploy.result }}
          channel: ${{ env.SLACK_CHANNEL }}
          icon_url: ${{ vars.SLACK_LOGO_URL }}
