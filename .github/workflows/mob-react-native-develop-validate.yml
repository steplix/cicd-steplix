name: Development validation

on:
  workflow_call:
    inputs:
      COMMIT_MESSAGE:
        type: string
        description: "Pass the head commit message {{ github.event.head_commit.message }}"
        required: true
      PR_BRANCH:
        type: string
        default: testing
        description: Branch to generate PR to finish the pipeline
        required: false
      NODE_VERSION:
        type: string
        default: '18'
        required: false
      DISABLE_CACHE:
        type: string
        default: 'false'
      SLACK_CHANNEL:
        type: string
    secrets:
      SLACK_WEBHOOK_URL:
        required: true

env:
  NEXT_BRANCH: '${{ inputs.PR_BRANCH }}'
  COMMIT_MESSAGE: '${{ inputs.COMMIT_MESSAGE }}'
  NODE_VERSION: '${{ inputs.NODE_VERSION }}'
  DISABLE_CACHE: '${{ inputs.DISABLE_CACHE }}'
  SLACK_CHANNEL: '${{ inputs.SLACK_CHANNEL }}'

  # Secrets
  SLACK_WEBHOOK_URL: '${{ secrets.SLACK_WEBHOOK_URL }}'
  GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
    
      - uses: steplix/cicd-check-parameter@1.0.0
        id: args
        with:
          message: ${{ env.COMMIT_MESSAGE }}
          param-0: no-cache
    
      - name: Cache dependencies
        if: steps.args.outputs.param-0 != 'true' && env.DISABLE_CACHE != 'true'
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: (steps.cache.outputs.cache-hit != 'true')
        run: npm ci --ignore-scripts
    
      - run: npm run lint --if-present
      - run: npm run test --if-present

  create-pr:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v3

      - name: Create Testing Pull Request
        id: pr
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "${{ env.NEXT_BRANCH }}"
          pr_title: "Testing deployment: ${{ env.COMMIT_MESSAGE }}"
          pr_body: Automated PR
          github_token: ${{ env.GITHUB_TOKEN }}

      - name: Notify Slack
        uses: steplix/cicd-notify@1.0.0
        continue-on-error: true
        with:
          template: pr
          status: ${{ job.status }}
          channel: ${{ env.SLACK_CHANNEL }}
        env:
          PR_URL: ${{ steps.pr.outputs.pr_url }}
          PR_NUMBER: ${{ steps.pr.outputs.pr_number }}
